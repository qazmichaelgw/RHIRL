# AUTOGENERATED! DO NOT EDIT! File to edit: 12_bipedalwalker.ipynb (unless otherwise specified).

__all__ = ['BipedalWalkerStateful', 'register']

# Cell
import copy
import pickle
import unittest

import cv2
import gym
import numpy as np
from gym.envs import register as gym_register
from gym.envs.box2d import BipedalWalker

class BipedalWalkerStateful(BipedalWalker):
    def __init__(self):
        self.actions = None
        BipedalWalker.__init__(self)

    def reset(self):
        self.np_random_at_reset = copy.deepcopy(self.np_random)
        obs = BipedalWalker.reset(self)
        self.actions = []
        return obs

    def step(self, action):
        if self.actions is not None:
            self.actions.append(action)
        return BipedalWalker.step(self, action)

    def render(self, mode='human'):
        return BipedalWalker.render(self, mode)

    def __getstate__(self):
        ezpickle_state = BipedalWalker.__getstate__(self)
        return ezpickle_state, self.np_random_at_reset, self.actions

    def __setstate__(self, state):
        ezpickle_state, np_random, actions = state
        BipedalWalker.__setstate__(self, ezpickle_state)
        self.np_random = np_random
        self.reset()
        for action in actions:
            self.step(action)

def register():
    gym_register(
        id='BipedalWalkerStateful-v0',
        entry_point=BipedalWalkerStateful,
        max_episode_steps=1000,
    )